

==============================
저장시간 : 09/07/23 Thursday 12:47:23
==============================
//------------------------------------------------------------------------------------------------------------
// 2023. 2학기 C++				9월 7일															(1주 1일)
//------------------------------------------------------------------------------------------------------------
// 강의 소개
// save 코드로
// -----------------------------------------------------------------------------------------------------------
// [할일]
// -----------------------------------------------------------------------------------------------------------

// #include <iostream>
// #include <fstream>   // 파일을 읽고 쓰려면 이걸 포함해야함.
// #include <chrono>    // 시간을 다루는 라이브러리
#include "save.h"
// using namespace std; // ->>???

int main()
{
    // /*
    //         "소스.cpp"의 내용을 읽어서 하드디스크에 파일로 기록한다.
    //         1. 소스.cpp를 읽는다.
    //             - 소스.cpp 파일을 연다.									//(ctrl + o ) 해당 파일에 파일 탐색기 열기
    //             - 파일에서 한 글자를 읽어서 저장한다.
    //         2. 읽은 내용을 다른 파일에 쓴다.
    //             - 저장할 파일을 연다.
    //             - 읽은 글자를 저장할 파일에 기록한다.
    // */

    // // :: 범위 지정 연산자.
    // std::ifstream in{"소스.cpp"};                                                // 읽어올 파일
    // std::ofstream out{"2023년 2학기 C++ 월56목34 강의 저장.txt", std::ios::app}; // 저장할 파일

    // // 저장한 시간을 기록
    // auto now = std::chrono::system_clock::now();          // time_point를 얻는다.
    // auto utc = std::chrono::system_clock::to_time_t(now); // utc 시간으로 변경
    // auto lt = std::localtime(&utc);                       // 주소값을 넘김? //지역시간으로 변경
    // // auto old = out.inbue(std::locale("ko_KR"));                 //한글로 변경하는 스트림

    // out << '\n'
    //     << '\n';
    // out << "==============================" << '\n';
    // out << "저장시간 : " << std::put_time(lt, "%x %A %X") << '\n';
    // out << "==============================" << '\n';
    // // out.inbue(old); //다시 되돌림
    // cout << lt << '\n';

    // char c;

    // // for (int i = 0; i < 200; i++) {
    // //	in >> c;
    // //	// cout <- 화면 출력
    // //	std::cout << c;
    // // }

    // in >> std::noskipws; // tap, space 포함

    // while (in >> c)
    // { // 실제로 읽는 부분
    //     // std::cout << c;
    //     out << c;
    // }
    save("소스.cpp");
    save("save.h");
    save("save.cpp");
}

==============================
저장시간 : 09/07/23 Thursday 12:47:23
==============================
//----------------------------------------------------------------------------
// save.h - 소스 파일을 저장하는 함수
// 2023.9.7
//----------------------------------------------------------------------------
#include <string>
#pragma once
void save(const std::string&);

==============================
저장시간 : 09/07/23 Thursday 12:47:23
==============================
//----------------------------------------------------------------------------
// save.cpp - 한 학기 강의를 저장하는 함수
// 2023.9.7
//----------------------------------------------------------------------------

#include <iostream>
#include <fstream>   // 파일을 읽고 쓰려면 이걸 포함해야함.
#include <chrono>    // 시간을 다루는 라이브러리
using namespace std; // ->>???

void save(const string&  fileName)
{
    /*
            "소스.cpp"의 내용을 읽어서 하드디스크에 파일로 기록한다.
            1. 소스.cpp를 읽는다.
                - 소스.cpp 파일을 연다.									//(ctrl + o ) 해당 파일에 파일 탐색기 열기
                - 파일에서 한 글자를 읽어서 저장한다.
            2. 읽은 내용을 다른 파일에 쓴다.
                - 저장할 파일을 연다.
                - 읽은 글자를 저장할 파일에 기록한다.
    */

    // :: 범위 지정 연산자.
    std::ifstream in{fileName};                                                // 읽어올 파일
    std::ofstream out{"2023년 2학기 C++ 월56목34 강의 저장.txt", std::ios::app}; // 저장할 파일

    // 저장한 시간을 기록
    auto now = std::chrono::system_clock::now();          // time_point를 얻는다.
    auto utc = std::chrono::system_clock::to_time_t(now); // utc 시간으로 변경
    auto lt = std::localtime(&utc);                       // 주소값을 넘김? //지역시간으로 변경
    // auto old = out.inbue(std::locale("ko_KR"));                 //한글로 변경하는 스트림

    out << '\n'
        << '\n';
    out << "==============================" << '\n';
    out << "저장시간 : " << std::put_time(lt, "%x %A %X") << '\n';
    out << "==============================" << '\n';
    // out.inbue(old); //다시 되돌림
    cout << lt << '\n';

    char c;

    // for (int i = 0; i < 200; i++) {
    //	in >> c;
    //	// cout <- 화면 출력
    //	std::cout << c;
    // }

    in >> std::noskipws; // tap, space 포함

    while (in >> c)
    { // 실제로 읽는 부분
        // std::cout << c;
        out << c;
    }
}

==============================
저장시간 : 09/07/23 Thursday 13:14:05
==============================
//------------------------------------------------------------------------------------------------------------
// 2023. 2학기 C++				9월 7일															(1주 1일)
//------------------------------------------------------------------------------------------------------------
// C++ 입출력
// -----------------------------------------------------------------------------------------------------------
// [과제] 공부한 내용 반복해서 실행가능하도록 하자
// -----------------------------------------------------------------------------------------------------------

#include "save.h"
#include <iostream> //기본 객체 생성 -> cout, cin(키보드), cerr, clog
#include <format>   // c++20 출력의 양식을 조절
using namespace std;

int main()
{

    for (int i = 1; i <= 9; ++i)
    {
        cout << i << "단" << '\n';
        for (int j = 1; j <= 9; ++j)
        {
            cout << i << " x " << j << " = " <<
                // std::format("{:2d}", i * j)
                i * j
                 << '\n';
        }
        cout << '\n';
    }

    save("소스.cpp");
    // save("save.h");
    // save("save.cpp");
}

==============================
저장시간 : 09/07/23 Thursday 13:16:05
==============================
//------------------------------------------------------------------------------------------------------------
// 2023. 2학기 C++				9월 7일															(1주 1일)
//------------------------------------------------------------------------------------------------------------
// C++ 입출력
// -----------------------------------------------------------------------------------------------------------
// [과제] 공부한 내용 반복해서 실행가능하도록 하자
// -----------------------------------------------------------------------------------------------------------

#include "save.h"
#include <iostream> //기본 객체 생성 -> cout, cin(키보드), cerr, clog
#include <format>   // c++20 출력의 양식을 조절
using namespace std;

int main()
{

    // 이름을 입력받아서 환영합니다!라고 출력하자
    cout << "이름을 입력하세요: ";
    string name;
    cin >> name;
    cout << name << "님 환영합니다!";

    save("소스.cpp");
    // save("save.h");
    // save("save.cpp");
}